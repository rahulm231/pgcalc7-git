(function (a) {
    a.extend({
        tablesorterPager: new function () {
            function k(f) {
                var i = a(f.cssPageDisplay, f.container).val(f.page + 1 + f.seperator + f.totalPages)
            }

            function d(i, f) {
                var m = i.config;
                m.size = f;
                m.totalPages = Math.ceil(m.totalRows / m.size);
                m.pagerPositionSet = false;
                h(i);
                b(i)
            }

            function b(f) {
                var m = f.config;
                if (!m.pagerPositionSet && m.positionFixed) {
                    var m = f.config, i = a(f);
                    if (i.offset) {
                        m.container.css({top: -2.5 + "em", position: "absolute"})
                    }
                    m.pagerPositionSet = true
                }
            }

            function e(i) {
                var f = i.config;
                f.page = 0;
                h(i)
            }

            function l(i) {
                var f = i.config;
                f.page = f.totalPages - 1;
                h(i)
            }

            function c(i) {
                var f = i.config;
                f.page++;
                if (f.page >= f.totalPages - 1) {
                    f.page = f.totalPages - 1
                }
                h(i)
            }

            function j(i) {
                var f = i.config;
                f.page--;
                if (f.page <= 0) {
                    f.page = 0
                }
                h(i)
            }

            function h(i) {
                var f = i.config;
                if (f.page < 0 || f.page > f.totalPages - 1) {
                    f.page = 0
                }
                g(i, f.rowsCopy)
            }

            function g(r, t) {
                var q = r.config;
                var z = t.length;
                var y = q.page * q.size;
                var w = y + q.size;
                if (w > t.length) {
                    w = t.length
                }
                var s = a(r.tBodies[0]);
                a.tablesorter.clearTableBody(r);
                for (var x = y; x < w; x++) {
                    var v = t[x];
                    var z = v.length;
                    for (var m = 0; m < z; m++) {
                        s[0].appendChild(v[m])
                    }
                }
                b(r, s);
                a(r).trigger("applyWidgets");
                if (q.page >= q.totalPages) {
                    l(r)
                }
                k(q)
            }

            this.appender = function (i, f) {
                var m = i.config;
                m.rowsCopy = f;
                m.totalRows = f.length;
                m.totalPages = Math.ceil(m.totalRows / m.size);
                g(i, f)
            };
            this.defaults = {
                size: 10,
                offset: 0,
                page: 0,
                totalRows: 0,
                totalPages: 0,
                container: null,
                cssNext: ".next",
                cssPrev: ".prev",
                cssFirst: ".first",
                cssLast: ".last",
                cssPageDisplay: ".pagedisplay",
                cssPageSize: ".pagesize",
                seperator: "/",
                positionFixed: true,
                appender: this.appender
            };
            this.construct = function (f) {
                return this.each(function () {
                    config = a.extend(this.config, a.tablesorterPager.defaults, f);
                    var m = this, i = config.container;
                    a(this).trigger("appendCache");
                    config.size = parseInt(a(".pagesize", i).val());
                    a(config.cssFirst, i).click(function () {
                        e(m);
                        return false
                    });
                    a(config.cssNext, i).click(function () {
                        c(m);
                        return false
                    });
                    a(config.cssPrev, i).click(function () {
                        j(m);
                        return false
                    });
                    a(config.cssLast, i).click(function () {
                        l(m);
                        return false
                    });
                    a(config.cssPageSize, i).change(function () {
                        d(m, parseInt(a(this).val()));
                        return false
                    })
                })
            }
        }
    });
    a.fn.extend({tablesorterPager: a.tablesorterPager.construct})
})(jQuery);